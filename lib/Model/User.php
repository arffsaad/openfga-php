<?php
/**
 * User
 *
 * @category Class
 * @package  RuncloudIO\SDK\OPENFGA
 * @author   Runcloud Engineering Team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * OpenFGA
 *
 * A high performance and flexible authorization/permission engine built for developers and inspired by Google Zanzibar.
 *
 * OpenAPI spec version: 1.x
 * Contact: community@openfga.dev
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.67
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace RuncloudIO\SDK\OPENFGA\Model;

use \RuncloudIO\SDK\OPENFGA\ObjectSerializer;

/**
 * User Class Doc Comment
 *
 * Required Attributes:
 *
 * @category Class
 * @description User.  Represents any possible value for a user (subject or principal). Can be a: - Specific user object e.g.: &#x27;user:will&#x27;, &#x27;folder:marketing&#x27;, &#x27;org:contoso&#x27;, ...) - Specific userset (e.g. &#x27;group:engineering#member&#x27;) - Public-typed wildcard (e.g. &#x27;user:*&#x27;)  See https://openfga.dev/docs/concepts#what-is-a-user
 * @package  RuncloudIO\SDK\OPENFGA
 * @author   Runcloud Engineering Team
 * @link     https://github.com/swagger-api/swagger-codegen
 *
 *
 * @method \RuncloudIO\SDK\OPENFGA\Model\Object getObject()
 * @method $this setObject($object)
 * @method \RuncloudIO\SDK\OPENFGA\Model\UsersetUser getUserset()
 * @method $this setUserset($userset)
 * @method \RuncloudIO\SDK\OPENFGA\Model\TypedWildcard getWildcard()
 * @method $this setWildcard($wildcard)
 *
 */
class User implements ModelInterface
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'User';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'object' => '\RuncloudIO\SDK\OPENFGA\Model\Object',
        'userset' => '\RuncloudIO\SDK\OPENFGA\Model\UsersetUser',
        'wildcard' => '\RuncloudIO\SDK\OPENFGA\Model\TypedWildcard'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'object' => null,
        'userset' => null,
        'wildcard' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'object' => 'object',
        'userset' => 'userset',
        'wildcard' => 'wildcard'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'object' => 'setObject',
        'userset' => 'setUserset',
        'wildcard' => 'setWildcard'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'object' => 'getObject',
        'userset' => 'getUserset',
        'wildcard' => 'getWildcard'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }



    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param \RuncloudIO\SDK\OPENFGA\Model\Object $object object 
     * @param \RuncloudIO\SDK\OPENFGA\Model\UsersetUser $userset userset 
     * @param \RuncloudIO\SDK\OPENFGA\Model\TypedWildcard $wildcard wildcard 
     *   Associated array of property values initializing the model
     */
    public function __construct(\RuncloudIO\SDK\OPENFGA\Model\Object $object = null, \RuncloudIO\SDK\OPENFGA\Model\UsersetUser $userset = null, \RuncloudIO\SDK\OPENFGA\Model\TypedWildcard $wildcard = null)
    {
        if(!is_null($object)) {
            $this->container['object'] = $object;
        }
        if(!is_null($userset)) {
            $this->container['userset'] = $userset;
        }
        if(!is_null($wildcard)) {
            $this->container['wildcard'] = $wildcard;
        }
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets object
     *
     * @return \RuncloudIO\SDK\OPENFGA\Model\Object
     */
    public function getObject()
    {
        return $this->container['object'];
    }

    /**
     * Sets object
     *
     * @param \RuncloudIO\SDK\OPENFGA\Model\Object $object object
     *
     * @return $this
     */
    public function setObject($object)
    {
        $this->container['object'] = $object;

        return $this;
    }

    /**
     * Gets userset
     *
     * @return \RuncloudIO\SDK\OPENFGA\Model\UsersetUser
     */
    public function getUserset()
    {
        return $this->container['userset'];
    }

    /**
     * Sets userset
     *
     * @param \RuncloudIO\SDK\OPENFGA\Model\UsersetUser $userset userset
     *
     * @return $this
     */
    public function setUserset($userset)
    {
        $this->container['userset'] = $userset;

        return $this;
    }

    /**
     * Gets wildcard
     *
     * @return \RuncloudIO\SDK\OPENFGA\Model\TypedWildcard
     */
    public function getWildcard()
    {
        return $this->container['wildcard'];
    }

    /**
     * Sets wildcard
     *
     * @param \RuncloudIO\SDK\OPENFGA\Model\TypedWildcard $wildcard wildcard
     *
     * @return $this
     */
    public function setWildcard($wildcard)
    {
        $this->container['wildcard'] = $wildcard;

        return $this;
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
